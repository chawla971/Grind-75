class Solution:
    def isPalindrome(self, s: str) -> bool:
        l, r = 0, len(s) - 1

        while l < r:
            # Skip non-alphanumeric characters
            while l < r and not self.alphaNum(s[l]):
                l += 1
            while r > l and not self.alphaNum(s[r]):
                r -= 1

            # Compare lowercase characters
            if s[l].lower() != s[r].lower():
                return False

            l, r = l + 1, r - 1

        return True


    def alphaNum(self, c: str) -> bool:
        """Checks if a character is alphanumeric (A-Z, a-z, 0-9) using ASCII values."""
        return (
            ord('A') <= ord(c) <= ord('Z') or
            ord('a') <= ord(c) <= ord('z') or
            ord('0') <= ord(c) <= ord('9')
        )


# ðŸ§ª Test it locally
if __name__ == "__main__":
    solver = Solution()
    test_cases = [
        ("A man, a plan, a canal: Panama", True),
        ("race a car", False),
        (" ", True),
        ("No lemon, no melon", True)
    ]

    for s, expected in test_cases:
        result = solver.isPalindrome(s)
        print(f"Input: {s!r}\nOutput: {result} | Expected: {expected}\n")
