"""
Problem: Two Sum (LeetCode #1)
--------------------------------
Given an array of integers nums and an integer target, return indices
of the two numbers such that they add up to target.

Example:
nums = [2,7,11,15], target = 9  --> Output: [0,1]
"""

# âœ… Optimized solution using hashmap
from typing import List

class Solution:
    def twoSum(self, nums: List[int], target: int) -> List[int]:
        prev_map = {}  # value -> index
        for i, n in enumerate(nums):
            diff = target - n
            if diff in prev_map:
                return [prev_map[diff], i]
            prev_map[n] = i


# ðŸ§ª Quick test cases (so you can run locally)
if __name__ == "__main__":
    solver = Solution()
    print(solver.twoSum([2, 7, 11, 15], 9))   # [0, 1]
    print(solver.twoSum([3, 2, 4], 6))        # [1, 2]
    print(solver.twoSum([3, 3], 6))           # [0, 1]
