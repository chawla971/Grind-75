"""
Problem: Valid Parentheses (LeetCode #20)
-----------------------------------------
Given a string s containing just the characters '(', ')', '{', '}', '[' and ']',
determine if the input string is valid.
"""

from typing import List

class Solution:
    def isValid(self, s: str) -> bool:
        stack = []
        mapping = {')':'(', ']':'[', '}':'{'}

        for char in s:
            if char in mapping:  # closing bracket
                top_element = stack.pop() if stack else '#'
                if mapping[char] != top_element:
                    return False
            else:  # opening bracket
                stack.append(char)

        return not stack


# ðŸ§ª Main function for local testing
def main():
    solver = Solution()
    test_cases = [
        ("()", True),
        ("()[]{}", True),
        ("(]", False),
        ("([])", True),
        ("([)]", False),
        ("{[]}", True),
        ("(((", False),
        ("", True)
    ]

    for s, expected in test_cases:
        result = solver.isValid(s)
        print(f"Input: {s:8} | Output: {result} | Expected: {expected}")


if __name__ == "__main__":
    main()
